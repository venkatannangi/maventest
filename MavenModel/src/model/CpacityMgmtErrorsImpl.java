package model;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 19 16:28:53 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CpacityMgmtErrorsImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Module,
        ErrMsg,
        CreatedBy,
        CreatedDate;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int MODULE = AttributesEnum.Module.index();
    public static final int ERRMSG = AttributesEnum.ErrMsg.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CpacityMgmtErrorsImpl() {
    }

    /**
     * Gets the attribute value for Module, using the alias name Module.
     * @return the value of Module
     */
    public String getModule() {
        return (String) getAttributeInternal(MODULE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Module.
     * @param value value to set the Module
     */
    public void setModule(String value) {
        setAttributeInternal(MODULE, value);
    }

    /**
     * Gets the attribute value for ErrMsg, using the alias name ErrMsg.
     * @return the value of ErrMsg
     */
    public String getErrMsg() {
        return (String) getAttributeInternal(ERRMSG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ErrMsg.
     * @param value value to set the ErrMsg
     */
    public void setErrMsg(String value) {
        setAttributeInternal(ERRMSG, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * @param module key constituent
     * @param errMsg key constituent
     * @param createdBy key constituent
     * @param createdDate key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String module, String errMsg, String createdBy, Timestamp createdDate) {
        return new Key(new Object[] { module, errMsg, createdBy, createdDate });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.CpacityMgmtErrors");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

